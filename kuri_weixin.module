<?php
/**
 * Implements of hook_menu()
 */
function kuri_weixin_menu() {
  $items['admin/config/kuri/weixin'] = array(
    'title' => 'Weixin Config',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_weixin_config_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'kuri_weixin.pages.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  // URL for Weixin push message
  $items['weixin/api'] = array(
    'page callback' => '_weixin_api',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['weixin/menu/generate'] = array(
    'page callback' => '_weixin_menu_generate',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}


/**
 * Callback function for Weixin push message
 */
function _weixin_api() {
  module_load_include('inc', 'kuri_weixin', 'kuri_weixin_api');
  $weixin_token = variable_get('kuri_weixin_token', NULL);
  $kuriWeixinAPI = new kuriWeixinAPI($weixin_token);

  // valid
  if (isset($_GET["echostr"])) {
    $kuriWeixinAPI->valid();
    exit;
  }

  // process to record conversation
  $postObj = $kuriWeixinAPI->responseMsg();

  if ($postObj == FALSE)
    watchdog('weixin_received', t('Nothing received.'), array(), WATCHDOG_ERROR);

  if (variable_get('kuri_weixin_debug')) {
    watchdog('weixin_received', htmlentities($postObj->asXML()), array(), WATCHDOG_INFO);
  }

  // save the recevied object
  _weixin_received_msg_save($postObj);
  exit;
}



/**
 * Save the received the Weixin message to Weixin Received Message content types
 */
function _weixin_received_msg_save($postObj) {
  // prepare message type
  $msgType = (string) strtolower(trim($postObj->MsgType));
  $termType = taxonomy_get_term_by_name($msgType, 'weixin_msg_type');
  $termType = array_shift($termType);


  $node = new stdClass();
  $node->title = $msgType . ' - ' . (string) $postObj->CreateTime;
  $node->created = (string) $postObj->CreateTime;
  $node->field_weixin_tousername[LANGUAGE_NONE][0]['value'] = (string) $postObj->ToUserName;
  $node->field_weixin_fromusername_plain[LANGUAGE_NONE][0]['value'] = (string) $postObj->FromUserName;
  $fromusername_nid = _update_weixin_user((string) $postObj->FromUserName);
  $node->field_weixin_fromusername[LANGUAGE_NONE][0]['target_id'] = $fromusername_nid;
  $node->field_weixin_msgid[LANGUAGE_NONE][0]['value'] = (string) $postObj->MsgId;

  switch ($msgType) {
    case 'text':
      // base
      $node->type = 'weixin_received_message';
      $node->field_weixin_msg_type[LANGUAGE_NONE][0]['tid'] = $termType->tid;
      // extra
      $node->field_weixin_content[LANGUAGE_NONE][0]['value'] = (string) trim($postObj->Content);
      break;
    case 'image':
      // base
      $node->type = 'weixin_received_message';
      $node->field_weixin_msg_type[LANGUAGE_NONE][0]['tid'] = $termType->tid;
      // extra
      $node->field_weixin_picurl[LANGUAGE_NONE][0]['value'] = (string) $postObj->PicUrl;
      $node->field_weixin_mediaid[LANGUAGE_NONE][0]['value'] = (string) $postObj->MediaId;
      break;
    case 'voice':
      // base
      $node->type = 'weixin_received_message';
      $node->field_weixin_msg_type[LANGUAGE_NONE][0]['tid'] = $termType->tid;
      // extra
      $node->field_weixin_mediaid[LANGUAGE_NONE][0]['value'] = (string) $postObj->MediaId;
      $node->field_weixin_format[LANGUAGE_NONE][0]['value'] = (string) $postObj->Format;
      break;
    case 'video':
      // base
      $node->type = 'weixin_received_message';
      $node->field_weixin_msg_type[LANGUAGE_NONE][0]['tid'] = $termType->tid;
      // extra
      $node->field_weixin_mediaid[LANGUAGE_NONE][0]['value'] = (string) $postObj->MediaId;
      $node->field_weixin_thumbmediaid[LANGUAGE_NONE][0]['value'] = (string) $postObj->ThumbMediaId;
      break;
    case 'location':
      // base
      $node->type = 'weixin_received_message';
      $node->field_weixin_msg_type[LANGUAGE_NONE][0]['tid'] = $termType->tid;
      // extra
      $node->field_weixin_location_x[LANGUAGE_NONE][0]['value'] = (string) $postObj->Location_X;
      $node->field_weixin_location_y[LANGUAGE_NONE][0]['value'] = (string) $postObj->Location_Y;
      $node->field_weixin_scale[LANGUAGE_NONE][0]['value'] = (string) $postObj->Scale;
      $node->field_weixin_label[LANGUAGE_NONE][0]['value'] = (string) $postObj->Label;
      break;
    case 'link':
      // base
      $node->type = 'weixin_received_message';
      $node->field_weixin_msg_type[LANGUAGE_NONE][0]['tid'] = $termType->tid;
      // extra
      $node->field_weixin_title[LANGUAGE_NONE][0]['value'] = (string) $postObj->Title;
      $node->field_weixin_description[LANGUAGE_NONE][0]['value'] = (string) $postObj->Description;
      $node->field_weixin_url[LANGUAGE_NONE][0]['value'] = (string) $postObj->Url;
      break;
    case 'event':
      // base
      $node->type = 'weixin_received_message';
      $node->field_weixin_msg_type[LANGUAGE_NONE][0]['tid'] = $termType->tid;
      // extra
      // event type
      $evenType = taxonomy_get_term_by_name(strtolower((string) $postObj->Event), 'weixin_event_type');
      $evenType = array_shift($evenType);
      $node->field_weixin_event_type[LANGUAGE_NONE][0]['tid'] = (string) $evenType->tid;

      if (isset($postObj->EventKey))
        $node->field_weixin_event_key[LANGUAGE_NONE][0]['value'] = (string) $postObj->EventKey;
      if (isset($postObj->Ticket))
        $node->field_weixin_event_ticket[LANGUAGE_NONE][0]['value'] = (string) $postObj->Ticket;
      if (isset($postObj->Latitude))
        $node->field_weixin_event_latitude[LANGUAGE_NONE][0]['value'] = (string) $postObj->Latitude;
      if (isset($postObj->Longitude))
        $node->field_weixin_event_longitude[LANGUAGE_NONE][0]['value'] = (string) $postObj->Longitude;
      if (isset($postObj->Precision))
        $node->field_weixin_event_precision[LANGUAGE_NONE][0]['value'] = (string) $postObj->Precision;
      break;
  }

  // I wann't this node be view in any front-end page, so unpublish it
  $node->status = 0;

  node_save($node);
}


/**
 * Callback function for menu /weixin/menu/generate
 */
function _weixin_menu_generate() {
  $vocabulary = taxonomy_vocabulary_machine_name_load('weixin_menu');
  $tree = taxonomy_get_tree($vocabulary->vid, 0, 2, TRUE);

  // turn to array
  $weixin_menu_array = array();
  foreach ($tree as $item) {
    $menu_array = array();
    if ($item->parents[0] == 0) {
      $menu_array['name'] = text_summary($item->name, null, 8);
      if ($childern = taxonomy_get_children($item->tid, $item->vid)) {
        foreach ($childern as $item) {
          $menu_array['sub_button'][] = _convert_menu_object($item, 2);
        }
      } else {
        $menu_array = _convert_menu_object($item);
      }
      $weixin_menu_array['button'][] = $menu_array;
    }
  }

  module_load_include('inc', 'ddms_weixin', 'weixin_api');
  $weixin_token = variable_get('ddms_weixin_token', NULL);
  $weixin_appid = variable_get('ddms_weixin_appid', NULL);
  $weixin_appsecret = variable_get('ddms_weixin_appsecret', NULL);
  $kuriWeixinAPI = new kuriWeixinAPI($weixin_token, $weixin_appid, $weixin_appsecret);
  $kuriWeixinAPI->pushMenu(json_encode($weixin_menu_array, JSON_UNESCAPED_UNICODE));

  drupal_goto('admin/structure/taxonomy/weixin_menu');
}

/**
 * Convert menu item to Weixin JSON data
 */
function _convert_menu_object($item, $level = 1) {
  $type = $item->field_weixin_menu_type[LANGUAGE_NONE][0]['value'];
  $menu_array = array(
    'type' => $type,
    'name' => text_summary($item->name, null, $level == 1 ? 8 : 20)
  );
  if ($type == 'click') $menu_array['key'] = $item->field_weixin_menu_click_key[LANGUAGE_NONE][0]['value'];
  if ($type == 'view') $menu_array['url'] = $item->field_weixin_menu_click_link[LANGUAGE_NONE][0]['url'];
  return $menu_array;
}


/**
 * Implementation hook_form_alter()
 */
function ddms_weixin_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'taxonomy_overview_terms' && $form['#vocabulary']->machine_name == 'weixin_menu') {
    $form['weixin_call'] = array(
      '#type' => 'link',
      '#title' => t('Generate Weixin Custom Menu'),
      '#href' => 'weixin/menu/generate',
    );
  }
}


/**
 * Prepare Weixin user data, create new one or update existing
 * openid (node title) is the primary key
 */
function _update_weixin_user($openid) {
  $nodes = node_load_multiple(array(), array('type' => 'weixin_user', 'title' => $openid));
  // create or update
  if (!empty($nodes)) {
    $node = array_shift($nodes);
    // TODO due to not other fields need update yet. remove it later when we can get other fields from Weixin API
    return $node->nid;
  } else {
    $node = new stdClass();
    $node->type = 'weixin_user';
    node_object_prepare($node);
  }

  $node->title = $openid;

  // TODO other fields, like nickname, sex, city, country, etc. We do not hav permission to get those
  // data from Weixin API yet.


  node_save($node);

  return $node->nid;
}

